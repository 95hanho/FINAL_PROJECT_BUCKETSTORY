<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mtbatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="commonMapper">
	<!-- 유저 -->
	<select id="memberLogin" parameterType="Member" resultMap="commonResultSet">
		select *
		from Member
		where userid=#{userId} and status = 'Y'
	</select>
	<resultMap id="commonResultSet" type="Member">
		<id property="userId" column="USERID"/>
		<result property="userPwd" column="USERPWD"/>
		<result property="userName" column="USERNAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="birth" column="BIRTH"/>
		<result property="gender" column="GENDER"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="caution" column="CAUTION"/>
		<result property="prImage" column="PR_IMAGE"/>
		<result property="fwCount" column="FW_COUNT"/>
		<result property="enrollDate" column="ENROLLDATE"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<insert id="insertMember" parameterType="Member">
		insert into Member
		values(#{userId}, #{userPwd}, #{userName}, #{phone}, #{email}, #{birth}, #{gender}, #{nickName}, default, null, default, sysdate, default)
	</insert>
	
	<!-- 아뒤 중복검사 -->
	<select id="idDuplicateCheck" resultType="_int">
		select count(*)
		from Member
		where userId=#{userId}
	</select>
	
	<!-- 닉넴 중복검사 -->
	<select id="nickCheck" resultType="_int">
		select count(*)
		from Member
		where nickName=#{nickName}
	</select>
		
	<!-- 아이디 찾기 : 이메일 비교 -->	
	<select id="compareEmail" resultType="string">
		select userId
		from Member
		where email=#{email}
	</select>
	
	<!-- 비번 찾기 : 임시 비번보내고 그걸로 변경 -->	
	<select id="getPw" resultType="int">
		select count(*)
		from Member
		where userId=#{id} and email=#{email}
	</select>
	
	
	<!-- 기업 -->	
	<select id="companyLogin" parameterType="Company" resultMap="CompanyResultSet">
		select * 
		from company
		where coid=#{coId} and approval = 'Y'
	</select>	
	<resultMap id="CompanyResultSet" type="Company">
		<id property="coId" column="COID"/>
		<result property="coPwd" column="COPWD"/>
		<result property="coName" column="CONAME"/>
		<result property="compaName" column="COMPANAME"/>
		<result property="apName" column="APNAME"/>
		<result property="homePage" column="HOMEPAGE"/>
		<result property="coTel" column="COTEL"/>
		<result property="enrollDate" column="ENROLLDATE"/>
		<result property="status" column="STATUS"/>
		<result property="approval" column="APPROVAL"/>
		<result property="busiEmail" column="BUSIEMAIL"/>
		<result property="cpCheck" column="CPCHECK"/>
		<result property="checkImg" column="CHECKIMG"/>
		<result property="point" column="POINT"/>
		<result property="cateNum" column="CATENUM"/>
		<result property="coIntro" column="COINTRO"/>
		<result property="coInfo" column="COINFO"/>
	</resultMap>
	
	<insert id="insertCompany" parameterType="Company">
		insert into Company
		values(#{coId}, #{coPwd}, #{coName}, #{compaName}, #{apName}, #{homePage}, #{coTel}, sysdate, default, default, #{busiEmail}, #{cpCheck}, #{checkImg}, 0, #{cateNum}, null, null)
	</insert>

	<select id="findAccount" resultMap="commonResultSet">
		select *
		from member
		where email=#{ email }
	</select>
	
	<!-- 기업 아뒤 중복검사 -->
	<select id="idDuplicateCheck2" resultType="_int">
		select count(*)
		from company
		where coId=#{coId}
	</select>
	
	<!-- 기업 아이디 찾기 : 이메일 비교 -->	
	<select id="compareEmail2" resultType="string">
		select *
		from company
		where busiEmail=#{busiEmail}
	</select>
	
	<select id="emailCheck" resultType="_int">
		select count(*)
		from member
		where email = #{ email } and status = 'Y'
	</select>
	
	<select id="idEmailCheck" resultType="_int">
		select count(*)
		from member
		where email = #{ email } and userid = #{ userId } and status = 'Y'
	</select>
	
	<update id="mempwdChange">
		update member
		set USERPWD = #{ newPwd }
		where USERID = #{ userId } 
	</update>
	
	
	<select id="CidEmailCheck" resultType="_int">
		select count(*)
		from COMPANY
		where BUSIEMAIL = #{ email } and COID = #{ userId } and status = 'Y'
	</select>
	
	<update id="conpwdChange">
		update company
		set COPWD = #{ newPwd }
		where COID = #{ userId } 
	</update>
</mapper>